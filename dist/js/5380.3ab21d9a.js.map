{"version":3,"file":"js/5380.3ab21d9a.js","mappings":"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","sources":["webpack://hiddenkittens/./src/views/PreLogin/Home.vue","webpack://hiddenkittens/./src/views/PreLogin/Home.vue?2fb7"],"sourcesContent":["<template>\r\n  <!-- Background Animation -->\r\n  <div class=\"background-animation\">\r\n    <img :src=\"Cat1\" alt=\"Random Cat\" class=\"cat\" :style=\"catStyle\" />\r\n  </div>\r\n\r\n  <!-- Home Container -->\r\n  <div class=\"home-container\">\r\n    <!-- Logo -->\r\n    <div class=\"logo-container\">\r\n      <img\r\n        :src=\"HiddenKittensLogo\"\r\n        alt=\"Hidden Kittens Logo\"\r\n        class=\"app-logo\"\r\n      />\r\n    </div>\r\n\r\n    <!-- Divider -->\r\n    <div class=\"divider\"></div>\r\n\r\n    <!-- Welcome Message -->\r\n    <p class=\"welcome-text\">\r\n      Your Guide to Amazing Spots and Great Experiences\r\n    </p>\r\n\r\n    <!-- Login Form -->\r\n    <div v-if=\"isLogin && !showResetPassword\" class=\"form-container\">\r\n      <h1 class=\"title\">Sign In</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Email\"\r\n        v-model=\"email\"\r\n        class=\"input-field\"\r\n      />\r\n\r\n      <!-- Password Field with Eye and Cat Icons -->\r\n      <div class=\"password-container\">\r\n        <input\r\n          :type=\"showPassword ? 'text' : 'password'\"\r\n          placeholder=\"Password\"\r\n          v-model=\"password\"\r\n          class=\"input-field\"\r\n        />\r\n        <span @click=\"togglePasswordVisibility\" class=\"eye-icon\">{{\r\n          showPassword ? \"üëÅÔ∏è\" : \"üê±\"\r\n        }}</span>\r\n      </div>\r\n\r\n      <!-- Forgot password link directly below password field -->\r\n      <a @click=\"showResetPassword = true\" class=\"forgot-password\"\r\n        >Forgot password?</a\r\n      >\r\n\r\n      <p v-if=\"errMsg\" class=\"error-msg\">{{ errMsg }}</p>\r\n      <button @click=\"login\" class=\"submit-button\">Login</button>\r\n      <button @click=\"signInWithGoogle\" class=\"submit-button google-button\">\r\n        <img\r\n          src=\"@/assets/icons/google-icon.png\"\r\n          alt=\"Google icon\"\r\n          class=\"google-icon\"\r\n        />\r\n        Sign In With Google\r\n      </button>\r\n\r\n      <!-- New to Hidden Kittens? Join now link -->\r\n      <div class=\"new-account\">\r\n        <span>New to Hidden Kittens? </span\r\n        ><a @click=\"toggleForm\" class=\"join-now\">Join now</a>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Password Reset Form -->\r\n    <div v-if=\"showResetPassword\" class=\"form-container\">\r\n      <h1 class=\"title\">Reset Password</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter your email\"\r\n        v-model=\"resetEmail\"\r\n        class=\"input-field\"\r\n      />\r\n      <p v-if=\"resetErrMsg\" class=\"error-msg\">{{ resetErrMsg }}</p>\r\n      <p v-if=\"resetSuccessMsg\" class=\"success-msg\">{{ resetSuccessMsg }}</p>\r\n      <button @click=\"sendResetEmail\" class=\"submit-button\">\r\n        Send Reset Email\r\n      </button>\r\n      <a @click=\"showResetPassword = false\" class=\"back-to-signin\"\r\n        >Back to Login</a\r\n      >\r\n    </div>\r\n\r\n    <!-- Registration Form -->\r\n    <div v-else-if=\"!isLogin\" class=\"form-container register-form\">\r\n      <h1 class=\"title\">Create an Account</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"First Name\"\r\n        v-model=\"firstName\"\r\n        class=\"input-field\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Last Name\"\r\n        v-model=\"lastName\"\r\n        class=\"input-field\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Email\"\r\n        v-model=\"email\"\r\n        class=\"input-field\"\r\n      />\r\n\r\n      <!-- Password Field with Eye and Cat Icons -->\r\n      <div class=\"password-container\">\r\n        <input\r\n          :type=\"showPassword ? 'text' : 'password'\"\r\n          placeholder=\"Password\"\r\n          v-model=\"password\"\r\n          class=\"input-field\"\r\n        />\r\n        <span @click=\"togglePasswordVisibility\" class=\"eye-icon\">{{\r\n          showPassword ? \"üëÅÔ∏è\" : \"üê±\"\r\n        }}</span>\r\n      </div>\r\n\r\n      <p v-if=\"errMsg\" class=\"error-msg\">{{ errMsg }}</p>\r\n      <button @click=\"register\" class=\"submit-button\">Register</button>\r\n      <a @click=\"toggleForm\" class=\"back-to-signin\">Back to Login</a>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from \"vue\";\r\nimport {\r\n  getAuth,\r\n  sendPasswordResetEmail,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  signOut,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n  onAuthStateChanged,\r\n} from \"firebase/auth\";\r\nimport { useRouter } from \"vue-router\";\r\nimport Cat1 from \"@/assets/img/cat1.jpg\";\r\nimport HiddenKittensLogo from \"@/assets/img/HiddenKittensLogo.jpg\";\r\nimport { getFirestore, doc, setDoc, getDoc } from \"firebase/firestore\";\r\n\r\nconst router = useRouter();\r\nconst auth = getAuth();\r\nconst db = getFirestore();\r\nconst firstName = ref(\"\");\r\nconst lastName = ref(\"\");\r\nconst email = ref(\"\");\r\nconst password = ref(\"\");\r\nconst errMsg = ref(\"\");\r\nconst isLogin = ref(true);\r\nconst showPassword = ref(false);\r\nconst showResetPassword = ref(false);\r\nconst resetEmail = ref(\"\");\r\nconst resetErrMsg = ref(\"\");\r\nconst resetSuccessMsg = ref(\"\");\r\n\r\n// Reset error messages when switching between views\r\nconst clearErrorMessages = () => {\r\n  errMsg.value = \"\";\r\n  resetErrMsg.value = \"\";\r\n  resetSuccessMsg.value = \"\";\r\n};\r\n\r\n// Track user type: Google or Standard\r\nconst trackUserType = (isGoogleUser) => {\r\n  localStorage.setItem(\"isGoogleUser\", isGoogleUser ? \"true\" : \"false\");\r\n};\r\n\r\n// Toggle between login and register forms\r\nconst toggleForm = () => {\r\n  isLogin.value = !isLogin.value;\r\n  showResetPassword.value = false;\r\n\r\n  // Clear form fields when switching forms\r\n  email.value = \"\";\r\n  password.value = \"\";\r\n  firstName.value = \"\";\r\n  lastName.value = \"\";\r\n\r\n  // Clear error messages when switching forms\r\n  clearErrorMessages();\r\n};\r\n\r\n\r\nconst togglePasswordVisibility = () => {\r\n  showPassword.value = !showPassword.value;\r\n};\r\n\r\n// Sign in with Google\r\nconst signInWithGoogle = async () => {\r\n  const provider = new GoogleAuthProvider();\r\n  try {\r\n    const result = await signInWithPopup(auth, provider);\r\n    const user = result.user;\r\n\r\n    // Check if the user already exists in Firestore\r\n    const userDocRef = doc(db, \"Users\", user.email);\r\n    const userDoc = await getDoc(userDocRef);\r\n\r\n    if (!userDoc.exists()) {\r\n      // Create a new document with user details\r\n      await setDoc(userDocRef, {\r\n        firstName: user.displayName.split(\" \")[0] || \"\",\r\n        lastName: user.displayName.split(\" \")[1] || \"\",\r\n        userID: user.uid,\r\n        Adventures: [],\r\n        userType: \"Google\", // Mark as a Google user\r\n      });\r\n    }\r\n\r\n    const userDocRefBookmarks = doc(db, \"Bookmarks\", user.uid);\r\n    const userDocBookmarks = await getDoc(userDocRefBookmarks);\r\n\r\n    if (!userDocBookmarks.exists()) {\r\n      // Create a new document with user details\r\n      await setDoc(userDocRef, {\r\n        bookmarkLists: {}\r\n      });\r\n    }\r\n\r\n    // Redirect the user or handle post-login behavior\r\n    trackUserType(true);\r\n    router.push('/discovery');\r\n  } catch (error) {\r\n    console.error('Error during Google Sign-In:', error);\r\n    errMsg.value = `Google Sign-In failed: ${error.message}`;\r\n  }\r\n};\r\n\r\n// Login logic\r\nconst login = () => {\r\n  signInWithEmailAndPassword(auth, email.value, password.value)\r\n    .then(() => {\r\n      trackUserType(false); // Track as a standard user\r\n      router.push(\"/discovery\");\r\n    })\r\n    .catch((error) => {\r\n      errMsg.value = \"Email or password was incorrect\";\r\n    });\r\n};\r\n\r\nconst validatePassword = (password) => {\r\n  const minLength = 6;\r\n  const hasUppercase = /[A-Z]/.test(password);\r\n  const hasSpecialCharacter = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\r\n\r\n  if (password.length < minLength) {\r\n    return \"Password must be at least 6 characters long.\";\r\n  }\r\n  if (!hasUppercase) {\r\n    return \"Password must contain at least one uppercase letter.\";\r\n  }\r\n  if (!hasSpecialCharacter) {\r\n    return \"Password must contain at least one special character.\";\r\n  }\r\n  return null; // Password is valid\r\n};\r\n\r\nconst register = () => {\r\n  const passwordError = validatePassword(password.value);\r\n  if (passwordError) {\r\n    errMsg.value = passwordError;\r\n    return; // Prevent further execution if the password is invalid\r\n  }\r\n\r\n  createUserWithEmailAndPassword(auth, email.value, password.value)\r\n    .then(async (userCredential) => {\r\n      const user = userCredential.user;\r\n\r\n      // Add the new user to Firestore under the \"Users\" collection\r\n      await setDoc(doc(db, \"Users\", user.email), {\r\n        firstName: firstName.value,\r\n        lastName: lastName.value,\r\n        userID: user.uid,\r\n        Adventures: [],\r\n        userType: \"Standard\", // Mark as a standard user in Firestore\r\n      });\r\n\r\n      // Add the default bookmark list \"Favourites\" to new user\r\n      await setDoc(doc(db, \"Bookmarks\", user.uid), {\r\n        bookmarkLists: {}\r\n      });\r\n\r\n      // Sign out the user after registration to enforce manual login\r\n      await signOut(auth);\r\n\r\n      // Show login form after successful registration\r\n      isLogin.value = true;\r\n      errMsg.value = \"Account created successfully! Please log in.\";\r\n\r\n      // Clear form fields\r\n      email.value = \"\";\r\n      password.value = \"\";\r\n      firstName.value = \"\";\r\n      lastName.value = \"\";\r\n    })\r\n    .catch((error) => {\r\n      switch (error.code) {\r\n        case \"auth/email-already-in-use\":\r\n          errMsg.value = \"This email is already in use. Please use another email.\";\r\n          break;\r\n        case \"auth/invalid-email\":\r\n          errMsg.value = \"The email address is invalid. Please enter a valid email.\";\r\n          break;\r\n        case \"auth/weak-password\":\r\n          errMsg.value = \"Your password is too weak. It must be at least 6 characters.\";\r\n          break;\r\n        case \"auth/missing-password\":\r\n          errMsg.value = \"Please enter a password.\";\r\n          break;\r\n        case \"auth/operation-not-allowed\":\r\n          errMsg.value = \"Account creation is currently disabled. Please try again later.\";\r\n          break;\r\n        case \"auth/network-request-failed\":\r\n          errMsg.value = \"Network error. Please check your internet connection and try again.\";\r\n          break;\r\n        case \"auth/too-many-requests\":\r\n          errMsg.value = \"Too many attempts. Please wait a moment before trying again.\";\r\n          break;\r\n        default:\r\n          errMsg.value = `Registration failed: ${error.message.replace(\"Firebase: \", \"\")}`;\r\n          break;\r\n      }\r\n    });\r\n};\r\n\r\n// Send reset email logic\r\nconst sendResetEmail = () => {\r\n  if (!resetEmail.value) {\r\n    resetErrMsg.value = \"Please enter your email.\";\r\n    return;\r\n  }\r\n\r\n  sendPasswordResetEmail(auth, resetEmail.value)\r\n    .then(() => {\r\n      resetSuccessMsg.value = \"Password reset email sent. Please check your inbox.\";\r\n      resetErrMsg.value = \"\";\r\n    })\r\n    .catch(() => {\r\n      resetErrMsg.value = \"Error: Unable to send reset email.\";\r\n    });\r\n};\r\n\r\nconst catStyle = ref({\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n});\r\n\r\nfunction getRandomPosition() {\r\n  let top, left;\r\n  do {\r\n    top = Math.random() * 40 + 30;\r\n    left = Math.random() * 60 + 20;\r\n  } while (\r\n    top > 35 &&\r\n    top < 65 &&\r\n    left > 30 &&\r\n    left < 70\r\n  );\r\n\r\n  catStyle.value = {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n  };\r\n}\r\n\r\nonMounted(() => {\r\n  getRandomPosition();\r\n  setInterval(() => {\r\n    getRandomPosition();\r\n  }, 5000);\r\n});\r\n</script>\r\n\r\n\r\n<style scoped>\r\nhtml,\r\nbody,\r\n#app {\r\n  background-color: #f3f4f6;\r\n  font-family: \"Poppins\", Arial, sans-serif;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  margin: 0;\r\n}\r\n\r\n.background-animation {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 0;\r\n}\r\n\r\n.cat {\r\n  position: absolute;\r\n  width: 80px;\r\n  animation: fadeInOut 5s infinite ease-in-out;\r\n  opacity: 0;\r\n  z-index: -1; /* Keeps it behind other elements */\r\n}\r\n\r\n.home-container {\r\n  width: 400px;\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.logo-container {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.app-logo {\r\n  width: 200px;\r\n}\r\n\r\n.form-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.input-field {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin: 10px 0;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  background-color: #ffffff;\r\n  color: #333333;\r\n  font-size: 16px;\r\n}\r\n\r\n.password-container {\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n\r\n.eye-icon {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  cursor: pointer;\r\n  font-size: 1.2em;\r\n  color: #ff6d00;\r\n}\r\n\r\n.submit-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin: 10px 0;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: #ff6d00;\r\n  color: #ffffff;\r\n  font-size: 1em;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.submit-button:hover {\r\n  background-color: #e65c00;\r\n}\r\n\r\n.google-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin: 10px 0;\r\n  border: 1px solid #ff6d00;\r\n  border-radius: 4px; /* Same as other buttons */\r\n  background-color: transparent; /* Transparent background */\r\n  color: #ff6d00; /* Google button color */\r\n  font-size: 1em; /* Ensure font size consistency */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.google-button:hover {\r\n  background-color: #ff6d00;\r\n  color: #ffffff;\r\n}\r\n\r\n.google-icon {\r\n  width: 20px;\r\n  margin-right: 8px; /* Space between the icon and text */\r\n}\r\n\r\n.forgot-password {\r\n  color: #ff6d00;\r\n  font-size: 0.9em;\r\n  cursor: pointer;\r\n  margin-top: 5px;\r\n}\r\n\r\n.new-account {\r\n  font-size: 0.9em;\r\n  color: #888;\r\n  margin-top: 10px;\r\n}\r\n\r\n.join-now {\r\n  color: #ff6d00;\r\n  cursor: pointer;\r\n}\r\n\r\n.back-to-signin {\r\n  font-size: 0.9em;\r\n  color: #ff6d00;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  margin-top: 10px;\r\n}\r\n\r\n@keyframes fadeInOut {\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n  25% {\r\n    opacity: 1;\r\n  }\r\n  75% {\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./Home.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Home.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Home.vue?vue&type=style&index=0&id=5203882f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5203882f\"]])\n\nexport default __exports__"],"names":["router","auth","db","firstName","lastName","email","password","errMsg","isLogin","showPassword","showResetPassword","resetEmail","resetErrMsg","resetSuccessMsg","clearErrorMessages","value","trackUserType","isGoogleUser","localStorage","setItem","toggleForm","togglePasswordVisibility","signInWithGoogle","async","provider","result","user","userDocRef","userDoc","exists","displayName","split","userID","uid","Adventures","userType","userDocRefBookmarks","userDocBookmarks","bookmarkLists","push","error","console","message","login","then","catch","validatePassword","minLength","hasUppercase","test","hasSpecialCharacter","length","register","passwordError","userCredential","code","replace","sendResetEmail","catStyle","top","left","getRandomPosition","Math","random","setInterval","__exports__"],"sourceRoot":""}