{"version":3,"file":"js/2536.921fe6a3.js","mappings":"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","sources":["webpack://hiddenkittens/./src/components/AddToBookmarkList.vue","webpack://hiddenkittens/./src/components/AddToBookmarkList.vue?cd88","webpack://hiddenkittens/./src/components/SearchPlaces.vue","webpack://hiddenkittens/./src/components/SearchPlaces.vue?809c","webpack://hiddenkittens/./src/firebase.js"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"display\">\r\n      <div id=\"displayBookmarkListsIcon\" class=\"circle-icon\" @click=\"toggleModal\">+</div>\r\n    </div>\r\n\r\n    <!-- Modal Popup -->\r\n    <transition name=\"fade\">\r\n      <div v-if=\"isModalVisible\" class=\"modal-overlay\">\r\n        <div class=\"modal\">\r\n          <div class=\"modal-header\">\r\n            <button class=\"cancel-button\" @click=\"toggleModal\">Cancel</button>\r\n            <h3 class=\"modal-title\">Save to List</h3>\r\n            <button\r\n              v-if=\"bookmarkListNames.length > 0\"\r\n              class=\"save-button\"\r\n              @click=\"saveChanges\"\r\n            >Save</button>\r\n            <button\r\n              v-if=\"bookmarkListNames.length === 0\"\r\n              class=\"null-button\"\r\n            >Save</button>\r\n          </div>\r\n          <div class=\"divider-line\"></div>\r\n          <div class=\"modal-body\">\r\n            <template v-if=\"bookmarkListNames.length === 0\">\r\n              <button class=\"create-list-button\" @click=\"navigateToBookmark\">Create a Bookmark List</button>\r\n            </template>\r\n            <template v-else>\r\n              <div v-for=\"(name, index) in bookmarkListNames\" :key=\"index\" class=\"modal-item\">\r\n                <div class=\"item-details\">\r\n                  <i class=\"pi pi-objects-column icon\"></i>\r\n                  <div class=\"list-info\">\r\n                    <span class=\"list-name\">{{ name }}</span>\r\n                    <span class=\"item-count\">{{ bookmarkListCounts[index] }} items</span>\r\n                  </div>\r\n                </div>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  class=\"styled-checkbox\"\r\n                  :checked=\"bookmarkListChecks[index]\"\r\n                  @change=\"toggleCheckbox(index)\"\r\n                />\r\n              </div>\r\n            </template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </transition>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport firebaseApp from \"../firebase.js\";\r\nimport { getFirestore, doc, getDoc, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\n\r\nconst db = getFirestore(firebaseApp);\r\nconst auth = getAuth(firebaseApp);\r\nconst separator = \", Description:\";\r\n\r\nexport default {\r\n  props: {\r\n    itemUUID: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      bookmarkListDescriptions: [],\r\n      bookmarkListNames: [],\r\n      bookmarkListChecks: [],\r\n      isModalVisible: false,\r\n      userID: \"\",\r\n      userDocRef: \"\",\r\n      initialChecks: [],\r\n      bookmarkLists: {}, // Holds all bookmark lists with their items\r\n    };\r\n  },\r\n  async mounted() {\r\n    await this.fetchBookmarkLists();\r\n  },\r\n  computed: {\r\n    bookmarkListCounts() {\r\n      return this.bookmarkListNames.map((name, index) => {\r\n        const listKey = `${name}${separator}${this.bookmarkListDescriptions[index]}`;\r\n        return this.bookmarkLists[listKey]?.length || 0;\r\n      });\r\n    },\r\n  },\r\n  methods: {\r\n    // decide whether the modal is to be visiable or not\r\n    toggleModal() {\r\n    this.isModalVisible = !this.isModalVisible;\r\n    \r\n    if (this.isModalVisible) {\r\n      // Refresh the bookmark lists each time the modal is opened\r\n      this.fetchBookmarkLists();\r\n    } else {\r\n      // Reset changes if modal is closed without saving\r\n      this.bookmarkListChecks = [...this.initialChecks];\r\n    }\r\n  },\r\n  toggleCheckbox(index) {\r\n    this.bookmarkListChecks[index] = !this.bookmarkListChecks[index];\r\n  },\r\n  // toggle wehther to include the chckbox\r\n  toggleCheckbox(index) {\r\n    this.bookmarkListChecks[index] = !this.bookmarkListChecks[index];\r\n  },\r\n  // get all the bookmark lists you have\r\n  async fetchBookmarkLists() {\r\n    try {\r\n      await onAuthStateChanged(auth, (user) => {\r\n        if (user) {\r\n          this.userID = user.uid;\r\n          this.userDocRef = doc(db, \"Bookmarks\", this.userID);\r\n        } else {\r\n          console.log(\"User is not authenticated\");\r\n        }\r\n      });\r\n\r\n      let docSnap = await getDoc(this.userDocRef);\r\n\r\n      if (docSnap.exists()) {\r\n        const bookmarkLists = docSnap.data().bookmarkLists;\r\n        this.bookmarkLists = bookmarkLists;\r\n\r\n        this.bookmarkListNames = Object.keys(bookmarkLists)\r\n          .sort()\r\n          .map((key) => key.split(separator)[0]);\r\n          \r\n        this.bookmarkListDescriptions = Object.keys(bookmarkLists)\r\n          .sort()\r\n          .map((key) => key.split(separator)[1]);\r\n\r\n        this.bookmarkListChecks = this.bookmarkListNames.map((name, index) => {\r\n          const listKey = `${name}${separator}${this.bookmarkListDescriptions[index]}`;\r\n          return bookmarkLists[listKey]?.includes(this.itemUUID) || false;\r\n        });\r\n\r\n        this.initialChecks = [...this.bookmarkListChecks];\r\n      } else {\r\n        console.log(\"No such document!\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching document: \", error);\r\n    }\r\n  },\r\n  // go to the bookmark page\r\n  navigateToBookmark() {\r\n    this.$router.push(\"/bookmark\");\r\n  },\r\n  // save the add bookmarks or remove bookamrks\r\n  async saveChanges() {\r\n    let docSnap = await getDoc(this.userDocRef);\r\n    let bookmarkLists = docSnap.data().bookmarkLists || {};\r\n\r\n    this.bookmarkListNames.forEach((name, index) => {\r\n      const listKey = `${name}${separator}${this.bookmarkListDescriptions[index]}`;\r\n      const isChecked = this.bookmarkListChecks[index];\r\n      const wasInitiallyChecked = this.initialChecks[index];\r\n\r\n      if (isChecked && !wasInitiallyChecked) {\r\n        // Add itemUUID if newly checked\r\n        bookmarkLists[listKey] = bookmarkLists[listKey] || [];\r\n        if (!bookmarkLists[listKey].includes(this.itemUUID)) {\r\n          bookmarkLists[listKey].push(this.itemUUID);\r\n        }\r\n      } else if (!isChecked && wasInitiallyChecked) {\r\n        // Remove itemUUID if unchecked\r\n        bookmarkLists[listKey] = bookmarkLists[listKey].filter(\r\n          (id) => id !== this.itemUUID\r\n        );\r\n      }\r\n    });\r\n\r\n      try {\r\n        await updateDoc(this.userDocRef, { bookmarkLists });\r\n        this.$emit(\"added\");\r\n\r\n        // Refresh the bookmark lists to reflect updated counts\r\n        await this.fetchBookmarkLists();\r\n\r\n        this.initialChecks = [...this.bookmarkListChecks]; // Update initial checks to new state\r\n        this.isModalVisible = false; // Close modal after saving\r\n      } catch (error) {\r\n        console.error(\"Error updating document: \", error);\r\n        alert(\"Failed to save changes. Please try again.\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.circle-icon {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 25px;\r\n  height: 25px;\r\n  border-radius: 50%;\r\n  background-color: #ccc;\r\n  border: 2px solid #999;\r\n  font-size: 1.5rem;\r\n  color: #333;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.circle-icon:hover {\r\n  background-color: #bbb;\r\n}\r\n\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal {\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  width: 400px; /* Fixed width */\r\n  height: 450px; /* Fixed height */\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\r\n  overflow-y: auto;\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.modal-title {\r\n  color: #2c3f50;\r\n  margin: 0 auto;\r\n  font-weight: bold;\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.save-button {\r\n  background-color: #f8683b;\r\n  color: white;\r\n  padding: 5px 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 15px;\r\n}\r\n\r\n.null-button {\r\n  background-color: #ffffff;\r\n  color: white;\r\n  padding: 5px 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 15px;\r\n}\r\n\r\n.cancel-button {\r\n  background-color: #fff;\r\n  color: #565656;\r\n  padding: 5px 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 15px;\r\n}\r\n\r\n.divider-line {\r\n  height: 1px;\r\n  background-color: #ccc;\r\n  margin-top: 5px;\r\n}\r\n\r\n.modal-body {\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.modal-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px 0;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.item-details {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.icon {\r\n  font-size: 1.2rem;\r\n  margin: 0 0 0 15px;\r\n  color: #333;\r\n}\r\n\r\n.list-info {\r\n  margin: 0 0 0 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: left;\r\n}\r\n\r\n.list-name {\r\n  font-size: 1rem;\r\n  color: #333;\r\n}\r\n\r\n.item-count {\r\n  font-size: 0.85rem;\r\n  color: #777;\r\n}\r\n\r\n.styled-checkbox {\r\n  width: 18px;\r\n  height: 18px;\r\n  border-radius: 50%;\r\n  appearance: none;\r\n  margin: 0 15px 0 0;\r\n  background-color: #f0f0f0;\r\n  border: 1px solid #ccc;\r\n  cursor: pointer;\r\n  position: relative;\r\n}\r\n\r\n.styled-checkbox:checked {\r\n  background-color: #f8683b;\r\n  border: 1px solid #f8683b;\r\n}\r\n\r\n.styled-checkbox:checked::before {\r\n  content: \"✓\";\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  font-size: 0.8rem;\r\n  color: white;\r\n}\r\n\r\n/* Fade transition styles */\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.fade-enter,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n.create-list-button {\r\n  background-color: #f8683b;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 8px 12px;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  display: block;\r\n  margin: 0 auto;\r\n  margin-top: 150px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.create-list-button:hover {\r\n  background-color: #fb5321;\r\n}\r\n</style>","import { render } from \"./AddToBookmarkList.vue?vue&type=template&id=55e7e77c&scoped=true\"\nimport script from \"./AddToBookmarkList.vue?vue&type=script&lang=js\"\nexport * from \"./AddToBookmarkList.vue?vue&type=script&lang=js\"\n\nimport \"./AddToBookmarkList.vue?vue&type=style&index=0&id=55e7e77c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55e7e77c\"]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <div class=\"search-container\">\r\n      <div class=\"search-input-wrapper\">\r\n        <i class=\"pi pi-search search-icon\"></i> <!-- PrimeVue search icon -->\r\n        <input\r\n          type=\"text\"\r\n          v-model=\"query\"\r\n          @input=\"fetchAutocomplete\"\r\n          placeholder=\"Restaurants, shops or events\"\r\n          class=\"search-input\"\r\n        />\r\n      </div>\r\n      <button @click=\"emitSearch\" class=\"search-button\">Search</button>\r\n      <button @click=\"openFilterModal\" class=\"filter-button\">\r\n        <i class=\"pi pi-filter-fill\"></i>\r\n        Filter\r\n      </button> \r\n\r\n      <ul v-if=\"suggestions.length\" class=\"autocomplete-results\">\r\n        <li\r\n          v-for=\"(suggestion, index) in suggestions\"\r\n          :key=\"index\"\r\n          @click=\"goToItem(suggestion.uuid)\" \r\n          class=\"autocomplete-item\"\r\n        >\r\n          {{ suggestion.name }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <!-- Filter Modal -->\r\n    <div v-if=\"showFilter\" class=\"filter-modal\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <button class=\"close-button\" @click=\"showFilter = false\">&times;</button>\r\n          <h3 class=\"modal-title\">Filter</h3>\r\n          <button class=\"clear-button\" @click=\"clearFilters\">Clear All</button>\r\n          <button class=\"save-button\" @click=\"saveFilter\">Save</button>\r\n        </div>\r\n        <div class=\"divider-line\"></div>\r\n        \r\n        <div class=\"modal-body\">\r\n          <!-- Search Type Section -->\r\n          <div class=\"filter-category\">\r\n            <h3>Search Type</h3>\r\n            <div class=\"button-group\">\r\n              <label\r\n                :class=\"['filter-option', { 'selected': selectedSearchType === 'food_beverages' }]\"\r\n                @click=\"toggleSearchType('food_beverages')\"\r\n              >\r\n                F&B\r\n              </label>\r\n              <label\r\n                :class=\"['filter-option', { 'selected': selectedSearchType === 'shops' }]\"\r\n                @click=\"toggleSearchType('shops')\"\r\n              >\r\n                Shops\r\n              </label>\r\n              <label\r\n                :class=\"['filter-option', { 'selected': selectedSearchType === 'events' }]\"\r\n                @click=\"toggleSearchType('events')\"\r\n              >\r\n                Events\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div class=\"divider-line-2\"></div>\r\n\r\n          <!-- Category Section (Dynamically Updates with Search Type) -->\r\n          <div class=\"filter-category\" v-if=\"categoriesList && Object.keys(categoriesList).length\">\r\n            <h3>Category</h3>\r\n            <div class=\"button-group-2\">\r\n              <label\r\n                v-for=\"(displayName, key) in categoriesList\"\r\n                :key=\"key\"\r\n                :class=\"['filter-option', { 'selected': selectedCategories.includes(key) }]\"\r\n                @click=\"toggleCategory(key)\"\r\n              >\r\n                {{ displayName }}\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getPlaces } from '@/tihServices.js'; // Adjust the path as needed\r\nimport { useRoute, useRouter } from 'vue-router';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      query: '',\r\n      suggestions: [],\r\n      showFilter: false,\r\n      selectedSearchType: null,\r\n      selectedCategories: [], // Holds selected categories as an array of stored names\r\n      searchType: '', // Saved search type\r\n      categoriesList: {}, // Holds current categories based on the selected search type\r\n      searchTypeCategories: {\r\n        // Define the categories available for each search type\r\n        food_beverages: {\r\n          bar: 'Bars',\r\n          cafe: 'Cafe',\r\n          hawker_centre: 'Hawker Centres',\r\n          restaurant: 'Restaurants',\r\n          others: 'Others',\r\n        },\r\n        shops: {\r\n          bazaar_flea_market: 'Bazaars & Flea Markets',\r\n          boutique: 'Boutiques',\r\n          department_store: 'Department Stores',\r\n          mall: 'Malls',\r\n          others: 'Others'\r\n        },\r\n        events: {\r\n          arts: 'Arts',\r\n          attraction: 'Attractions',\r\n          entertainment: 'Entertainment',\r\n          food_beverage: 'Food & Beverages',\r\n          history_culture: 'History & Culture',\r\n          nature_wildlife: 'Nature & Wildlife',\r\n          shopping: 'Shopping',\r\n          sport: 'Sports',\r\n          others: 'Others'\r\n        }\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    // Computed property that returns selected categories as a \"?\"-separated string\r\n    selectedCategoriesString() {\r\n      return this.selectedCategories.join(\"-\");\r\n    }\r\n  },\r\n  methods: {\r\n    openFilterModal() {\r\n      this.showFilter = true;\r\n    },\r\n    getTypeIdParam() {\r\n      // Check if any categories are selected\r\n      return this.selectedCategories.length > 0 ? `&typeId=${this.selectedCategoriesString}` : \"\";\r\n    },\r\n    async fetchAutocomplete() {\r\n      if (this.query.length < 3) return;\r\n\r\n      try {\r\n        console.log(this.getTypeIdParam());\r\n        const searchTypeParam = this.searchType === \"\" ? 'events,food_beverages,shops' : this.searchType;\r\n        const response = await getPlaces(`search?dataset=${searchTypeParam}${this.getTypeIdParam()}&keyword=${this.query}&limit=3`);\r\n        this.suggestions = response.data.map(item => ({ name: item.name, uuid: item.uuid }));\r\n      } catch (error) {\r\n        console.error('Error fetching autocomplete results:', error);\r\n      }\r\n    },\r\n    goToItem(uuid) {\r\n      this.$router.push(`/item/${uuid}`);\r\n    },\r\n    emitSearch() {\r\n      // Check if there are any selected categories\r\n      const categoryPath = this.selectedCategories.length > 0 ? `/${this.selectedCategoriesString}` : \"\";\r\n      this.searchType = this.searchType === \"\" ? 'events,food_beverages,shops' : this.searchType;\r\n      const searchTypePath = this.searchType === 'events,food_beverages,shops' ? \"\" : `/${this.searchType}`;\r\n      \r\n      // Construct the URL based on the presence of selected categories\r\n      const url = `/search/${this.query}${searchTypePath}${categoryPath}`;\r\n      \r\n      // Navigate to the constructed URL\r\n      this.$router.push(url).then(() => {\r\n        window.location.href = url; // Reload the page after the route is pushed\r\n      });\r\n    },\r\n    saveFilter() {\r\n      this.searchType = this.selectedSearchType || 'events,food_beverages,shops';\r\n      this.showFilter = false;\r\n      console.log(\"Selected Search Type:\", this.searchType);\r\n      console.log(\"Selected Categories:\", this.selectedCategories.join(\"-\"));\r\n    },\r\n    clearFilters() {\r\n      this.selectedSearchType = null;\r\n      this.selectedCategories = [];\r\n      this.categoriesList = {};\r\n    },\r\n    toggleSearchType(type) {\r\n      this.selectedSearchType = this.selectedSearchType === type ? null : type;\r\n      // Update the category list based on the selected search type\r\n      this.categoriesList = this.selectedSearchType ? this.searchTypeCategories[this.selectedSearchType] : {};\r\n      // Clear previously selected categories when switching search types\r\n      this.selectedCategories = [];\r\n    },\r\n    toggleCategory(category) {\r\n      // Toggle category selection\r\n      if (this.selectedCategories.includes(category)) {\r\n        this.selectedCategories = this.selectedCategories.filter(cat => cat !== category);\r\n      } else {\r\n        this.selectedCategories.push(category);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    // Initialize selectedSearchType and selectedCategories based on route parameters\r\n    const route = useRoute();\r\n    this.query = route.params.searchinput || '';\r\n    this.selectedSearchType = route.params.searchtype || '';\r\n    this.selectedCategories = route.params.category ? route.params.category.split('-') : [];\r\n\r\n    // Set the categoriesList based on the selected search type at initialization\r\n    if (this.selectedSearchType) {\r\n      this.categoriesList = this.searchTypeCategories[this.selectedSearchType];\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.divider-line {\r\n  height: 2px;\r\n  background-color: #ccc; /* Optional: divider line between sections */\r\n}\r\n\r\n.divider-line-2 {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.search-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 10px;\r\n  margin: 0; \r\n  position: relative;\r\n}\r\n\r\n.search-input-wrapper {\r\n  position: relative;\r\n  width: 40vw;\r\n  min-width: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.search-input {\r\n  width: 100%;\r\n  padding: 10px 40px; /* Leave padding on the left for the icon */\r\n  border: none;\r\n  outline: none;\r\n  height: 40px;\r\n  color: #2c3f50;\r\n  background-color: #e6e6e6; /* Input background color */\r\n  border-radius: 25px 0px 0px 25px;\r\n  font-size: 16px;\r\n}\r\n\r\n.search-icon {\r\n  position: absolute;\r\n  left: 15px; /* Position the icon inside the input */\r\n  color: #888; /* Icon color, matching the placeholder color */\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.search-button {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  font-size: 15px;\r\n  height: 40px;\r\n  background-color: #f8683b;\r\n  color: white;\r\n  cursor: pointer;\r\n  border-radius: 0 25px 25px 0;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.search-button:hover {\r\n  background-color: #f24f1d; /* Darken the button on hover */\r\n}\r\n\r\n.filter-button {\r\n  margin-left: 10px;\r\n  padding: 10px 0; \r\n  background-color: #bbbbbb;\r\n  color: white;\r\n  width: 95px; \r\n  height: 40px; \r\n  font-size: 15px;\r\n  border: none;\r\n  cursor: pointer;\r\n  border-radius: 25px;\r\n  transition: background-color 0.3s ease;\r\n  box-sizing: border-box; \r\n  display: flex;\r\n  justify-content: center; \r\n  align-items: center; \r\n  overflow: hidden; \r\n}\r\n\r\n.filter-button i {\r\n  font-size: 13px; \r\n  margin-right: 5px;\r\n}\r\n\r\n.filter-button:hover {\r\n  background-color: #6e6e6e; /* Darken the filter button on hover */\r\n}\r\n\r\n.autocomplete-results {\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  background-color: white;\r\n  position: absolute;\r\n  top: 55px;\r\n  left: calc(30vw - 95px);\r\n  width: 40vw;\r\n  z-index: 10; \r\n}\r\n\r\n.autocomplete-item {\r\n  padding: 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n.autocomplete-item:hover {\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n/* Modal styling */\r\n.filter-modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 20;\r\n}\r\n\r\n.modal-content {\r\n  background-color: white;\r\n  padding: 20px;\r\n  padding-bottom: 5px;\r\n  border-radius: 8px;\r\n  width: 600px;\r\n  height: auto;\r\n  min-height: 490px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.close-button {\r\n  background: none;\r\n  border: none;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  color: #888;\r\n  transition: color 0.2s;\r\n}\r\n\r\n.close-button:hover {\r\n  color: #444;\r\n}\r\n\r\n.modal-title {\r\n  color: #2c3f50;\r\n  flex-grow: 1;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  font-size: 1.5rem;\r\n  margin: 0 0 0 110px;\r\n}\r\n\r\n.save-button {\r\n  background-color: #f8683b;\r\n  color: white;\r\n  padding: 5px 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 15px;\r\n}\r\n\r\n.clear-button {\r\n  background-color: #b9b9b9;\r\n  color: white;\r\n  padding: 5px 10px;\r\n  margin: 0 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 15px;\r\n}\r\n\r\n.save-button:hover {\r\n  background-color: darkorange;\r\n}\r\n\r\n.modal-body {\r\n  padding: 10px 0;\r\n  font-size: 16px;\r\n}\r\n\r\n.filter-category {\r\n  background-color: #f9f9f9;\r\n  padding: 15px 20px 20px 20px;\r\n  border-radius: 10px;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.filter-category h3 {\r\n  margin: 0 0 10px;\r\n  font-size: 18px;\r\n}\r\n\r\n/* Styling for the selectable button group */\r\n.button-group {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 30px;\r\n  justify-content: center; \r\n}\r\n\r\n.button-group-2 {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n  justify-content: center; \r\n}\r\n\r\n.filter-option {\r\n  padding: 10px 20px;\r\n  border-radius: 8px;\r\n  background-color: #e6e6e6;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.filter-option.selected {\r\n  background-color: #f8683b;\r\n  color: white;\r\n}\r\n\r\n.filter-option:hover {\r\n  background-color: #fb9c7f;\r\n  color: white;\r\n}\r\n</style>","import { render } from \"./SearchPlaces.vue?vue&type=template&id=02efe5e4&scoped=true\"\nimport script from \"./SearchPlaces.vue?vue&type=script&lang=js\"\nexport * from \"./SearchPlaces.vue?vue&type=script&lang=js\"\n\nimport \"./SearchPlaces.vue?vue&type=style&index=0&id=02efe5e4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-02efe5e4\"]])\n\nexport default __exports__","import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\n    const firebaseConfig = {\r\n        // The firebase if from our shared firebase account\r\n        apiKey: \"AIzaSyBIvMKxanaRLaXbKNyMjvnrT51qiOXUGUQ\",\r\n        authDomain: \"hiddenkittens-ce78f.firebaseapp.com\",\r\n        projectId: \"hiddenkittens-ce78f\",\r\n        storageBucket: \"hiddenkittens-ce78f.appspot.com\",\r\n        messagingSenderId: \"217815978130\",\r\n        appId: \"1:217815978130:web:c3060088a75f253434564b\",\r\n        measurementId: \"G-QLL1TDRGGH\"\r\n    };\r\n\r\n    const firebaseApp = initializeApp(firebaseConfig);\r\n    const auth = getAuth(firebaseApp);\r\n\r\n    export default firebaseApp;\r\n\r\n    \r\n"],"names":["class","id","toggleModal","name","bookmarkListNames","length","saveChanges","navigateToBookmark","index","key","bookmarkListCounts","type","checked","bookmarkListChecks","toggleCheckbox","db","firebase","auth","separator","props","itemUUID","String","required","data","bookmarkListDescriptions","isModalVisible","userID","userDocRef","initialChecks","bookmarkLists","mounted","this","fetchBookmarkLists","computed","map","listKey","methods","user","uid","console","log","docSnap","exists","Object","keys","sort","split","includes","error","$router","push","forEach","isChecked","wasInitiallyChecked","filter","$emit","alert","__exports__","render","fetchAutocomplete","placeholder","query","emitSearch","openFilterModal","suggestions","suggestion","goToItem","uuid","showFilter","clearFilters","saveFilter","selectedSearchType","toggleSearchType","categoriesList","displayName","selectedCategories","toggleCategory","searchType","searchTypeCategories","food_beverages","bar","cafe","hawker_centre","restaurant","others","shops","bazaar_flea_market","boutique","department_store","mall","events","arts","attraction","entertainment","food_beverage","history_culture","nature_wildlife","shopping","sport","selectedCategoriesString","join","getTypeIdParam","searchTypeParam","response","item","categoryPath","searchTypePath","url","then","window","location","href","category","cat","route","params","searchinput","searchtype","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp"],"sourceRoot":""}